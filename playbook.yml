---
- name: Provisionning webservers group
  hosts: webservers
  tasks:
    - name: Upgrade packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Ensure old versions of Docker are not installed
      package:
        name:
          - docker
          - docker.io
          - docker-engine
        state: absent

    - name: Install packages
      apt:
        name:
          - apt-transport-https
          - build-essential
          - ca-certificates
          - curl
          - fail2ban
          - git
          - gnupg
          - htop
          - ntp
          - ufw
          - unattended-upgrades
          - vim
        state: latest
        update_cache: yes
        autoremove: yes
        autoclean: yes
      notify:
        - start ntp
        - start fail2ban

    - name: Add Docker apt key
      get_url:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        dest: /etc/apt/trusted.gpg.d/docker.asc
        mode: 0644
        force: false

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
        update_cache: true

    - name: Install Docker packages
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
      notify:
        - restart docker

    - name: Remove snap
      apt:
        name:
          - snapd
          - snap
        state: absent
        purge: true

    - name: Configure ufw defaults
      ufw:
        direction: "{{ item.direction }}"
        policy: "{{ item.policy }}"
      loop:
        - direction: incoming
          policy: deny
        - direction: outgoing
          policy: allow

    - name: Configure ufw rules
      ufw:
        rule: "{{ item.rule }}"
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
      loop:
        - rule: 'limit'
          port: '22'
          proto: 'tcp'
        - rule: 'allow'
          port: '80'
          proto: 'tcp'
        - rule: 'allow'
          port: '443'
          proto: 'tcp'

    - name: Enable ufw
      ufw:
        state: enabled

    - name: Update SSH configuration to be more secure.
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        validate: 'sshd -T -f %s'
        mode: 0644
      with_items:
        - regexp: "^PasswordAuthentication"
          line: "PasswordAuthentication no"
        - regexp: "^PermitRootLogin"
          line: "PermitRootLogin prohibit-password"
        - regexp: "^Port"
          line: "Port 22"
        - regexp: "^UseDNS"
          line: "UseDNS no"
        - regexp: "^PermitEmptyPasswords"
          line: "PermitEmptyPasswords no"
        - regexp: "^ChallengeResponseAuthentication"
          line: "ChallengeResponseAuthentication no"
        - regexp: "^GSSAPIAuthentication"
          line: "GSSAPIAuthentication no"
        - regexp: "^X11Forwarding"
          line: "X11Forwarding no"
      notify:
        - restart ssh

    - name: Create traefik folder
      file:
        path: "/letsencrypt"
        state: directory

    - name: Create traefik file
      file:
        path: "/letsencrypt/acme.json"
        state: touch
        mode: 0600

  handlers:
    - name: start ntp
      service:
        name: ntp
        state: started
        enabled: yes

    - name: start fail2ban
      service:
        name: fail2ban
        state: started
        enabled: yes

    - name: restart ssh
      service:
        name: sshd
        state: restarted

    - name: restart docker
      service:
        name: docker
        state: restarted
        enabled: yes
